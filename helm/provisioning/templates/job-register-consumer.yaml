# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2024 Univention GmbH

---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ printf "%s-register-consumers" (include "common.names.fullname" .) }}
spec:
  template:
    spec:
      restartPolicy: Never
      volumes:
        - name: consumer-secrets
          secret:
            secretName: {{ $.Values.register_consumers.jsonSecretName }}
      initContainers:
        - name: {{ printf "wait-for-%s-api-to-start" (include "common.names.fullname" .) }}
          image: busybox
          command: [ "sh", "-c", "until nc -z {{ printf "%s-api" (include "common.names.fullname" .) }} 80 > /dev/null; do echo Waiting for api; sleep 2; done;" ]
      containers:
        - name: consumer-registration
          image: "{{ coalesce .Values.register_consumers.image.registry .Values.global.imageRegistry }}/{{ .Values.register_consumers.image.repository }}:{{ .Values.register_consumers.image.tag }}"
          volumeMounts:
            - name: consumer-secrets
              mountPath: "/secrets"
          envFrom:
            - configMapRef:
                name: {{ printf "%s-register-consumers" (include "common.names.fullname" .) }}
            - secretRef:
                name: {{ $.Values.register_consumers.credentialSecretName | quote }}
          command:
            - "/bin/sh"
            - "-c"
          args:
            - |
              for file in /secrets/*; do
                filename=$(basename "$file" .json)
                response=$(curl -s -o response.txt -w "%{http_code}" -u $ADMIN_USERNAME:$ADMIN_PASSWORD \
                -H 'Content-Type: application/json' \
                -d @$file $PROVISIONING_API_BASE_URL)
                if [ "$response" -eq 201 ]; then
                  echo "Successful registration of the consumer: $filename"
                else
                  echo "Failed to register the consumer: $filename
              Response code: $response
              Response body: $(cat response.txt)"
                fi
                echo ------------------------------------
              done