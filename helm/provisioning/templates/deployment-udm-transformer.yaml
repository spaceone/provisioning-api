# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2024 Univention GmbH

---
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ printf "%s-udm-transformer" (include "common.names.fullname" .) }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.additionalLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.additionalLabels "context" . ) | nindent 4 }}
    {{- end }}
  {{- if .Values.additionalAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.additionalAnnotations "context" . ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount.udmTransformer }}
  selector:
    matchLabels:
      {{- include "common.labels.matchLabels" . | nindent 6 }}
  {{- if .Values.updateStrategy.type }}
  strategy:
    type: {{ .Values.updateStrategy.type }}
  {{- end }}
  template:
    metadata:
      annotations:
        checksum/configmap: {{ include (print .Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.podAnnotations "context" .) | nindent 8 }}
        {{- end }}
      labels:
        {{- include "common.labels.standard" . | nindent 8 }}
    spec:
      {{- if or .Values.imagePullSecrets .Values.global.imagePullSecrets  }}
      imagePullSecrets:
        {{- range .Values.global.imagePullSecrets }}
        - name: "{{ . }}"
        {{- end }}
        {{- range .Values.imagePullSecrets }}
        - name: "{{ . }}"
        {{- end }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.affinity "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.nodeSelector "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "common.names.fullname" . }}
      {{- end }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}
      containers:
        - name: "udm-transformer"
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          image: "{{ coalesce .Values.udmTransformer.image.registry .Values.global.imageRegistry }}/{{ .Values.udmTransformer.image.repository }}:{{ .Values.udmTransformer.image.tag }}"
          imagePullPolicy: {{ coalesce .Values.udmTransformer.image.imagePullPolicy .Values.global.imagePullPolicy | quote }}
          envFrom:
            - configMapRef:
                name: {{ printf "%s-common" (include "common.names.fullname" .) }}
            - configMapRef:
                name: {{ printf "%s-udm-transformer" (include "common.names.fullname" .) }}
          {{- if (include "provisioning-udm-transformer.api.auth.credentialSecretName" .) }}
            - secretRef:
                name: {{ include "provisioning-udm-transformer.api.auth.credentialSecretName" . | quote }}
          {{- end }}
          {{- if (include "provisioning-udm-transformer.nats.auth.credentialSecretName" .) }}
            - secretRef:
                name: {{ include "provisioning-udm-transformer.nats.auth.credentialSecretName" . | quote }}
          {{- end }}
          {{- if (include "provisioning-udm-transformer.ldap.auth.credentialSecretName" .) }}
            - secretRef:
                name: {{ include "provisioning-udm-transformer.ldap.auth.credentialSecretName" . | quote }}
          {{- end }}
          {{- with .Values.extraEnvVars }}
            {{- . | toYaml | nindent 12 }}
          {{- end }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.livenessProbe.udmTransformer "context" .) | nindent 12 }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.readinessProbe.udmTransformer "context" .) | nindent 12 }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.startupProbe.udmTransformer "context" .) | nindent 12 }}
          {{- if .Values.resources.udmTransformer }}
          resources: {{- include "common.tplvalues.render" (dict "value" .Values.resources.udmTransformer "context" .) | nindent 12 }}
          {{- end }}
          {{- if .Values.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.lifecycleHooks "context" .) | nindent 12 }}
          {{- end }}
          {{- if or .Values.nats.connection.tls.enabled .Values.extraVolumeMounts }}
          volumeMounts:
            {{- if .Values.nats.connection.tls.enabled }}
            - name: certificates-volume
              mountPath: /certificates
            {{- end }}
            {{- if .Values.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" .) | nindent 12 }}
            {{- end }}
          {{- end }}
      {{- if or .Values.nats.connection.tls.enabled .Values.extraVolumeMounts }}
      volumes:
        {{- if .Values.nats.connection.tls.enabled }}
        - name: certificates-volume
          secret:
            secretName: {{ .Values.nats.connection.tls.secretName  | default (printf "%s-udm-transformer-tls" (include "common.names.fullname" .) ) | quote }}
        {{- end }}
        {{- if .Values.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumes  "context" .) | nindent 8 }}
        {{- end }}
      {{- end }}
