---
# Default values for the provisioning-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


## Global values
affinity: {}
environment: {}
fullnameOverride: ""
nameOverride: ""
nodeSelector: {}
podAnnotations: {}
podSecurityContext: {}
replicaCount: 1
securityContext: {}
tolerations: []


# -- Application configuration of provisioning-api
provisioningApi:
  # -- Python log level
  logLevel: "INFO"
  # -- FastAPI: debug mode
  debug: True
  # -- FastAPI: webserver root path
  rootPath: ""
  # -- FastAPI: disable CORS checks
  corsAll: False
  # -- Redis: host
  redisHost: "localhost"
  # -- Redis: port
  redisPort: 6379
  # -- UDM REST API: base url
  udmUrl: ""
  # -- UDM REST API: username
  udmUsername: ""
  # -- UDM REST API: password
  udmPassword: ""


## Kubernetes ingress
ingress:
  # -- Set this to `true` in order to enable the installation on Ingress related objects.
  enabled: true
  ingressClassName: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/configuration-snippet: |
      rewrite ^/univention/provisioning-api(/.*)$ $1 break;
    nginx.org/location-snippets: |
      rewrite ^/univention/provisioning-api(/.*)$ $1 break;
    nginx.org/mergeable-ingress-type: "minion"
  # -- The hostname. This parameter has to be supplied. Example `portal.example`.
  host: null
  paths:
    - pathType: "Prefix"
      path: "/univention/provisioning-api/"
  tls:
    enabled: true
    secretName: ""


## Istio support
istio:
  # -- Set this to `true` in order to enable the installation on Istio related objects.
  enabled: false
  # -- The hostname. This parameter has to be supplied. Example `portal.example`.
  host: null
  virtualService:
    enabled: true
    annotations:
  gateway:
    enabled: false
    annotations:
    selectorIstio: "ingressgateway"
    externalGatewayName: "swp-istio-gateway"
    tls:
      enabled: true
      httpsRedirect: true
      secretName: ""


## Docker image
image:
  registry: "gitregistry.knut.univention.de"
  repository: "univention/customers/dataport/upx/provisioning-api/provisioning-dispatch"
  imagePullPolicy: "Always"
  tag: "latest"

  ## Define image sha256 as an alternative to `tag`
  # sha256:


## Container deployment probes
probes:
  liveness:
    enabled: true
    initialDelaySeconds: 120
    timeoutSeconds: 3
    periodSeconds: 30
    failureThreshold: 3
    successThreshold: 1

  readiness:
    enabled: true
    initialDelaySeconds: 30
    timeoutSeconds: 3
    periodSeconds: 15
    failureThreshold: 30
    successThreshold: 1


## Deployment resources
resources:
  requests:
    memory: "512Mi"
    cpu: "250m"
  limits:
    memory: "4Gi"
    cpu: "4"

## Kubernetes Service
service:
  enabled: true
  type: "ClusterIP"
  ports:
    http:
      containerPort: 7777
      port: 7777
      protocol: "TCP"

  sessionAffinity:
    enabled: false
    timeoutSeconds: 10800

...
